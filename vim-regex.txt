# vim normal-mode regex, in re2vba.pl input format.
# Copyright (c) Chris White 2018.
# CC-BY-NC-SA 4.0, or any later version, at your option.
# Useful command line:
# ./re2vba.pl --nodim vim-regex.txt |tee >(putclip)

# Main pattern
main        ^(  (?# Note: registers not yet implemented)
                (?<count1>[1-9][0-9]*)?
                (?:
                    (?<=intrans)
                    |
                    (?<=trans)
                )
            )$

# Motions that don't take arguments (although they may take counts).
# A motion of "0" is special-cased in the parsing code to keep the regex
# clean.  This regex, after backtracking, matches "10" as a count of "1"
# followed by a "0" motion.  We don't handle that here.
noarg-motion    [HMLG
                hjkl
                wbWB
                \x28\x29\x7b\x7d]|
                    (?# 28/29 are parens, move sentence )
                    (?# 7b/7d are braces, move paragraph )
                g?[eE0\^\$]         (?# gw, gb, etc. are not motions.)
                (?#  ^ Note: 0 is special-cased in the parsing code.)

# Intransitive, including motions.  These can take a count, namely ?<count1>.
intrans     (?<iverb>
                (?<imotion>             (?# motions)
                    (?<=noarg-motion)|
                    [fFtT](?<itext>.)
                )|

                (gW)?g?[\*#]|           (?# searches)

                g?[pP]                  (?# pastes)
            )
                # IVERB: what to do
                        # ITEXT: character to jump to

# Transitive: verb, count, object, object type, text
trans       (?<tverb>[cdyv])                (?# TVERB: what to do)
            (?<count2>[1-9][0-9]*)?         (?# Count after the operator)
            (?<tobj>                        (?# What to work on)
                [ai](?<objtype>[wWsp])|     (?# Text objects)
                [fFtT](?<ttext>.)|          (?# Motions with an argument)
                (?<=noarg-motion)
            )

# vi: set ts=4 sts=4 sw=4 et ai ff=unix ft=sh: #
